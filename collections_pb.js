/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var types_pb = require('./types_pb.js');
var connections_pb = require('./connections_pb.js');
goog.exportSymbol('proto.sygma_pb.AddDocumentReq', null, global);
goog.exportSymbol('proto.sygma_pb.CollectionInfo', null, global);
goog.exportSymbol('proto.sygma_pb.CollectionItem', null, global);
goog.exportSymbol('proto.sygma_pb.DeleteCollectionReq', null, global);
goog.exportSymbol('proto.sygma_pb.GetCollectionReq', null, global);
goog.exportSymbol('proto.sygma_pb.GetCollectionRes', null, global);
goog.exportSymbol('proto.sygma_pb.GetCollectionsReq', null, global);
goog.exportSymbol('proto.sygma_pb.GetCollectionsRes', null, global);
goog.exportSymbol('proto.sygma_pb.NewCollectionReq', null, global);
goog.exportSymbol('proto.sygma_pb.NewCollectionRes', null, global);
goog.exportSymbol('proto.sygma_pb.ShareWithUserReq', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.CollectionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sygma_pb.CollectionInfo.repeatedFields_, null);
};
goog.inherits(proto.sygma_pb.CollectionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.CollectionInfo.displayName = 'proto.sygma_pb.CollectionInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sygma_pb.CollectionInfo.repeatedFields_ = [8,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.CollectionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.CollectionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.CollectionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.CollectionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    owner: (f = msg.getOwner()) && connections_pb.User.toObject(includeInstance, f),
    role: jspb.Message.getFieldWithDefault(msg, 7, ""),
    collaboratorsList: jspb.Message.toObjectList(msg.getCollaboratorsList(),
    connections_pb.User.toObject, includeInstance),
    collaboratorscount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    subscriberscount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    tagsList: jspb.Message.getRepeatedField(msg, 11),
    pb_private: jspb.Message.getFieldWithDefault(msg, 12, false),
    readOnly: jspb.Message.getFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.CollectionInfo}
 */
proto.sygma_pb.CollectionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.CollectionInfo;
  return proto.sygma_pb.CollectionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.CollectionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.CollectionInfo}
 */
proto.sygma_pb.CollectionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 6:
      var value = new connections_pb.User;
      reader.readMessage(value,connections_pb.User.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 8:
      var value = new connections_pb.User;
      reader.readMessage(value,connections_pb.User.deserializeBinaryFromReader);
      msg.addCollaborators(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCollaboratorscount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubscriberscount(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.CollectionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.CollectionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.CollectionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.CollectionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      connections_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCollaboratorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      connections_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getCollaboratorscount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getSubscriberscount();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReadOnly();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.sygma_pb.CollectionInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionInfo.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.sygma_pb.CollectionInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionInfo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.sygma_pb.CollectionInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionInfo.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp createdAt = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sygma_pb.CollectionInfo.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sygma_pb.CollectionInfo.prototype.setCreatedat = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.sygma_pb.CollectionInfo.prototype.clearCreatedat = function() {
  this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.CollectionInfo.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sygma_pb.CollectionInfo.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sygma_pb.CollectionInfo.prototype.setUpdatedat = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.sygma_pb.CollectionInfo.prototype.clearUpdatedat = function() {
  this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.CollectionInfo.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional User owner = 6;
 * @return {?proto.sygma_pb.User}
 */
proto.sygma_pb.CollectionInfo.prototype.getOwner = function() {
  return /** @type{?proto.sygma_pb.User} */ (
    jspb.Message.getWrapperField(this, connections_pb.User, 6));
};


/** @param {?proto.sygma_pb.User|undefined} value */
proto.sygma_pb.CollectionInfo.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.sygma_pb.CollectionInfo.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.CollectionInfo.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string role = 7;
 * @return {string}
 */
proto.sygma_pb.CollectionInfo.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionInfo.prototype.setRole = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated User collaborators = 8;
 * @return {!Array.<!proto.sygma_pb.User>}
 */
proto.sygma_pb.CollectionInfo.prototype.getCollaboratorsList = function() {
  return /** @type{!Array.<!proto.sygma_pb.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, connections_pb.User, 8));
};


/** @param {!Array.<!proto.sygma_pb.User>} value */
proto.sygma_pb.CollectionInfo.prototype.setCollaboratorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.sygma_pb.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sygma_pb.User}
 */
proto.sygma_pb.CollectionInfo.prototype.addCollaborators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.sygma_pb.User, opt_index);
};


proto.sygma_pb.CollectionInfo.prototype.clearCollaboratorsList = function() {
  this.setCollaboratorsList([]);
};


/**
 * optional int32 collaboratorsCount = 9;
 * @return {number}
 */
proto.sygma_pb.CollectionInfo.prototype.getCollaboratorscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.sygma_pb.CollectionInfo.prototype.setCollaboratorscount = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 subscribersCount = 10;
 * @return {number}
 */
proto.sygma_pb.CollectionInfo.prototype.getSubscriberscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.sygma_pb.CollectionInfo.prototype.setSubscriberscount = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * repeated string tags = 11;
 * @return {!Array.<string>}
 */
proto.sygma_pb.CollectionInfo.prototype.getTagsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array.<string>} value */
proto.sygma_pb.CollectionInfo.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.sygma_pb.CollectionInfo.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.sygma_pb.CollectionInfo.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional bool private = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sygma_pb.CollectionInfo.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.sygma_pb.CollectionInfo.prototype.setPrivate = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool read_only = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sygma_pb.CollectionInfo.prototype.getReadOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.sygma_pb.CollectionInfo.prototype.setReadOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.NewCollectionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sygma_pb.NewCollectionReq.repeatedFields_, null);
};
goog.inherits(proto.sygma_pb.NewCollectionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.NewCollectionReq.displayName = 'proto.sygma_pb.NewCollectionReq';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sygma_pb.NewCollectionReq.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.NewCollectionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.NewCollectionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.NewCollectionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.NewCollectionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    owner: (f = msg.getOwner()) && connections_pb.User.toObject(includeInstance, f),
    sharedwithList: jspb.Message.toObjectList(msg.getSharedwithList(),
    connections_pb.User.toObject, includeInstance),
    pb_private: jspb.Message.getFieldWithDefault(msg, 5, false),
    readOnly: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.NewCollectionReq}
 */
proto.sygma_pb.NewCollectionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.NewCollectionReq;
  return proto.sygma_pb.NewCollectionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.NewCollectionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.NewCollectionReq}
 */
proto.sygma_pb.NewCollectionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new connections_pb.User;
      reader.readMessage(value,connections_pb.User.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 4:
      var value = new connections_pb.User;
      reader.readMessage(value,connections_pb.User.deserializeBinaryFromReader);
      msg.addSharedwith(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.NewCollectionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.NewCollectionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.NewCollectionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.NewCollectionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      connections_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getSharedwithList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      connections_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getReadOnly();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.sygma_pb.NewCollectionReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sygma_pb.NewCollectionReq.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sygma_pb.NewCollectionReq.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sygma_pb.NewCollectionReq.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional User owner = 3;
 * @return {?proto.sygma_pb.User}
 */
proto.sygma_pb.NewCollectionReq.prototype.getOwner = function() {
  return /** @type{?proto.sygma_pb.User} */ (
    jspb.Message.getWrapperField(this, connections_pb.User, 3));
};


/** @param {?proto.sygma_pb.User|undefined} value */
proto.sygma_pb.NewCollectionReq.prototype.setOwner = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.sygma_pb.NewCollectionReq.prototype.clearOwner = function() {
  this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.NewCollectionReq.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated User sharedWith = 4;
 * @return {!Array.<!proto.sygma_pb.User>}
 */
proto.sygma_pb.NewCollectionReq.prototype.getSharedwithList = function() {
  return /** @type{!Array.<!proto.sygma_pb.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, connections_pb.User, 4));
};


/** @param {!Array.<!proto.sygma_pb.User>} value */
proto.sygma_pb.NewCollectionReq.prototype.setSharedwithList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sygma_pb.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sygma_pb.User}
 */
proto.sygma_pb.NewCollectionReq.prototype.addSharedwith = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sygma_pb.User, opt_index);
};


proto.sygma_pb.NewCollectionReq.prototype.clearSharedwithList = function() {
  this.setSharedwithList([]);
};


/**
 * optional bool private = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sygma_pb.NewCollectionReq.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.sygma_pb.NewCollectionReq.prototype.setPrivate = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool read_only = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sygma_pb.NewCollectionReq.prototype.getReadOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.sygma_pb.NewCollectionReq.prototype.setReadOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.NewCollectionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sygma_pb.NewCollectionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.NewCollectionRes.displayName = 'proto.sygma_pb.NewCollectionRes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.NewCollectionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.NewCollectionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.NewCollectionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.NewCollectionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectioninfo: (f = msg.getCollectioninfo()) && proto.sygma_pb.CollectionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.NewCollectionRes}
 */
proto.sygma_pb.NewCollectionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.NewCollectionRes;
  return proto.sygma_pb.NewCollectionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.NewCollectionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.NewCollectionRes}
 */
proto.sygma_pb.NewCollectionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sygma_pb.CollectionInfo;
      reader.readMessage(value,proto.sygma_pb.CollectionInfo.deserializeBinaryFromReader);
      msg.setCollectioninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.NewCollectionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.NewCollectionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.NewCollectionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.NewCollectionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sygma_pb.CollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CollectionInfo CollectionInfo = 1;
 * @return {?proto.sygma_pb.CollectionInfo}
 */
proto.sygma_pb.NewCollectionRes.prototype.getCollectioninfo = function() {
  return /** @type{?proto.sygma_pb.CollectionInfo} */ (
    jspb.Message.getWrapperField(this, proto.sygma_pb.CollectionInfo, 1));
};


/** @param {?proto.sygma_pb.CollectionInfo|undefined} value */
proto.sygma_pb.NewCollectionRes.prototype.setCollectioninfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.sygma_pb.NewCollectionRes.prototype.clearCollectioninfo = function() {
  this.setCollectioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.NewCollectionRes.prototype.hasCollectioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.GetCollectionsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sygma_pb.GetCollectionsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.GetCollectionsReq.displayName = 'proto.sygma_pb.GetCollectionsReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.GetCollectionsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.GetCollectionsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.GetCollectionsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.GetCollectionsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && connections_pb.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.GetCollectionsReq}
 */
proto.sygma_pb.GetCollectionsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.GetCollectionsReq;
  return proto.sygma_pb.GetCollectionsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.GetCollectionsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.GetCollectionsReq}
 */
proto.sygma_pb.GetCollectionsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new connections_pb.User;
      reader.readMessage(value,connections_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.GetCollectionsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.GetCollectionsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.GetCollectionsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.GetCollectionsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      connections_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.sygma_pb.User}
 */
proto.sygma_pb.GetCollectionsReq.prototype.getUser = function() {
  return /** @type{?proto.sygma_pb.User} */ (
    jspb.Message.getWrapperField(this, connections_pb.User, 1));
};


/** @param {?proto.sygma_pb.User|undefined} value */
proto.sygma_pb.GetCollectionsReq.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.sygma_pb.GetCollectionsReq.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.GetCollectionsReq.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.GetCollectionsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sygma_pb.GetCollectionsRes.repeatedFields_, null);
};
goog.inherits(proto.sygma_pb.GetCollectionsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.GetCollectionsRes.displayName = 'proto.sygma_pb.GetCollectionsRes';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sygma_pb.GetCollectionsRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.GetCollectionsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.GetCollectionsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.GetCollectionsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.GetCollectionsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),
    proto.sygma_pb.CollectionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.GetCollectionsRes}
 */
proto.sygma_pb.GetCollectionsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.GetCollectionsRes;
  return proto.sygma_pb.GetCollectionsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.GetCollectionsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.GetCollectionsRes}
 */
proto.sygma_pb.GetCollectionsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sygma_pb.CollectionInfo;
      reader.readMessage(value,proto.sygma_pb.CollectionInfo.deserializeBinaryFromReader);
      msg.addCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.GetCollectionsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.GetCollectionsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.GetCollectionsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.GetCollectionsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sygma_pb.CollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CollectionInfo Collections = 1;
 * @return {!Array.<!proto.sygma_pb.CollectionInfo>}
 */
proto.sygma_pb.GetCollectionsRes.prototype.getCollectionsList = function() {
  return /** @type{!Array.<!proto.sygma_pb.CollectionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sygma_pb.CollectionInfo, 1));
};


/** @param {!Array.<!proto.sygma_pb.CollectionInfo>} value */
proto.sygma_pb.GetCollectionsRes.prototype.setCollectionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sygma_pb.CollectionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sygma_pb.CollectionInfo}
 */
proto.sygma_pb.GetCollectionsRes.prototype.addCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sygma_pb.CollectionInfo, opt_index);
};


proto.sygma_pb.GetCollectionsRes.prototype.clearCollectionsList = function() {
  this.setCollectionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.GetCollectionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sygma_pb.GetCollectionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.GetCollectionReq.displayName = 'proto.sygma_pb.GetCollectionReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.GetCollectionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.GetCollectionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.GetCollectionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.GetCollectionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.GetCollectionReq}
 */
proto.sygma_pb.GetCollectionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.GetCollectionReq;
  return proto.sygma_pb.GetCollectionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.GetCollectionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.GetCollectionReq}
 */
proto.sygma_pb.GetCollectionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.GetCollectionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.GetCollectionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.GetCollectionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.GetCollectionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string CollectionID = 1;
 * @return {string}
 */
proto.sygma_pb.GetCollectionReq.prototype.getCollectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sygma_pb.GetCollectionReq.prototype.setCollectionid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userID = 2;
 * @return {string}
 */
proto.sygma_pb.GetCollectionReq.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sygma_pb.GetCollectionReq.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.GetCollectionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sygma_pb.GetCollectionRes.repeatedFields_, null);
};
goog.inherits(proto.sygma_pb.GetCollectionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.GetCollectionRes.displayName = 'proto.sygma_pb.GetCollectionRes';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sygma_pb.GetCollectionRes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.GetCollectionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.GetCollectionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.GetCollectionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.GetCollectionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectioninfo: (f = msg.getCollectioninfo()) && proto.sygma_pb.CollectionInfo.toObject(includeInstance, f),
    collectionitemsList: jspb.Message.toObjectList(msg.getCollectionitemsList(),
    proto.sygma_pb.CollectionItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.GetCollectionRes}
 */
proto.sygma_pb.GetCollectionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.GetCollectionRes;
  return proto.sygma_pb.GetCollectionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.GetCollectionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.GetCollectionRes}
 */
proto.sygma_pb.GetCollectionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sygma_pb.CollectionInfo;
      reader.readMessage(value,proto.sygma_pb.CollectionInfo.deserializeBinaryFromReader);
      msg.setCollectioninfo(value);
      break;
    case 2:
      var value = new proto.sygma_pb.CollectionItem;
      reader.readMessage(value,proto.sygma_pb.CollectionItem.deserializeBinaryFromReader);
      msg.addCollectionitems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.GetCollectionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.GetCollectionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.GetCollectionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.GetCollectionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sygma_pb.CollectionInfo.serializeBinaryToWriter
    );
  }
  f = message.getCollectionitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sygma_pb.CollectionItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional CollectionInfo CollectionInfo = 1;
 * @return {?proto.sygma_pb.CollectionInfo}
 */
proto.sygma_pb.GetCollectionRes.prototype.getCollectioninfo = function() {
  return /** @type{?proto.sygma_pb.CollectionInfo} */ (
    jspb.Message.getWrapperField(this, proto.sygma_pb.CollectionInfo, 1));
};


/** @param {?proto.sygma_pb.CollectionInfo|undefined} value */
proto.sygma_pb.GetCollectionRes.prototype.setCollectioninfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.sygma_pb.GetCollectionRes.prototype.clearCollectioninfo = function() {
  this.setCollectioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.GetCollectionRes.prototype.hasCollectioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CollectionItem CollectionItems = 2;
 * @return {!Array.<!proto.sygma_pb.CollectionItem>}
 */
proto.sygma_pb.GetCollectionRes.prototype.getCollectionitemsList = function() {
  return /** @type{!Array.<!proto.sygma_pb.CollectionItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sygma_pb.CollectionItem, 2));
};


/** @param {!Array.<!proto.sygma_pb.CollectionItem>} value */
proto.sygma_pb.GetCollectionRes.prototype.setCollectionitemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sygma_pb.CollectionItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sygma_pb.CollectionItem}
 */
proto.sygma_pb.GetCollectionRes.prototype.addCollectionitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sygma_pb.CollectionItem, opt_index);
};


proto.sygma_pb.GetCollectionRes.prototype.clearCollectionitemsList = function() {
  this.setCollectionitemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.DeleteCollectionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sygma_pb.DeleteCollectionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.DeleteCollectionReq.displayName = 'proto.sygma_pb.DeleteCollectionReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.DeleteCollectionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.DeleteCollectionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.DeleteCollectionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.DeleteCollectionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.DeleteCollectionReq}
 */
proto.sygma_pb.DeleteCollectionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.DeleteCollectionReq;
  return proto.sygma_pb.DeleteCollectionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.DeleteCollectionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.DeleteCollectionReq}
 */
proto.sygma_pb.DeleteCollectionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.DeleteCollectionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.DeleteCollectionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.DeleteCollectionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.DeleteCollectionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string CollectionID = 1;
 * @return {string}
 */
proto.sygma_pb.DeleteCollectionReq.prototype.getCollectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sygma_pb.DeleteCollectionReq.prototype.setCollectionid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.ShareWithUserReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sygma_pb.ShareWithUserReq.repeatedFields_, null);
};
goog.inherits(proto.sygma_pb.ShareWithUserReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.ShareWithUserReq.displayName = 'proto.sygma_pb.ShareWithUserReq';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sygma_pb.ShareWithUserReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.ShareWithUserReq.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.ShareWithUserReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.ShareWithUserReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.ShareWithUserReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    connections_pb.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.ShareWithUserReq}
 */
proto.sygma_pb.ShareWithUserReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.ShareWithUserReq;
  return proto.sygma_pb.ShareWithUserReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.ShareWithUserReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.ShareWithUserReq}
 */
proto.sygma_pb.ShareWithUserReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionid(value);
      break;
    case 2:
      var value = new connections_pb.User;
      reader.readMessage(value,connections_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.ShareWithUserReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.ShareWithUserReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.ShareWithUserReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.ShareWithUserReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      connections_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional string CollectionID = 1;
 * @return {string}
 */
proto.sygma_pb.ShareWithUserReq.prototype.getCollectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sygma_pb.ShareWithUserReq.prototype.setCollectionid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated User users = 2;
 * @return {!Array.<!proto.sygma_pb.User>}
 */
proto.sygma_pb.ShareWithUserReq.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.sygma_pb.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, connections_pb.User, 2));
};


/** @param {!Array.<!proto.sygma_pb.User>} value */
proto.sygma_pb.ShareWithUserReq.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sygma_pb.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sygma_pb.User}
 */
proto.sygma_pb.ShareWithUserReq.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sygma_pb.User, opt_index);
};


proto.sygma_pb.ShareWithUserReq.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.AddDocumentReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sygma_pb.AddDocumentReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.AddDocumentReq.displayName = 'proto.sygma_pb.AddDocumentReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.AddDocumentReq.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.AddDocumentReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.AddDocumentReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.AddDocumentReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    item: (f = msg.getItem()) && proto.sygma_pb.CollectionItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.AddDocumentReq}
 */
proto.sygma_pb.AddDocumentReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.AddDocumentReq;
  return proto.sygma_pb.AddDocumentReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.AddDocumentReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.AddDocumentReq}
 */
proto.sygma_pb.AddDocumentReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionid(value);
      break;
    case 2:
      var value = new proto.sygma_pb.CollectionItem;
      reader.readMessage(value,proto.sygma_pb.CollectionItem.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.AddDocumentReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.AddDocumentReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.AddDocumentReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.AddDocumentReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sygma_pb.CollectionItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string CollectionID = 1;
 * @return {string}
 */
proto.sygma_pb.AddDocumentReq.prototype.getCollectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sygma_pb.AddDocumentReq.prototype.setCollectionid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionItem item = 2;
 * @return {?proto.sygma_pb.CollectionItem}
 */
proto.sygma_pb.AddDocumentReq.prototype.getItem = function() {
  return /** @type{?proto.sygma_pb.CollectionItem} */ (
    jspb.Message.getWrapperField(this, proto.sygma_pb.CollectionItem, 2));
};


/** @param {?proto.sygma_pb.CollectionItem|undefined} value */
proto.sygma_pb.AddDocumentReq.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.sygma_pb.AddDocumentReq.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.AddDocumentReq.prototype.hasItem = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sygma_pb.CollectionItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sygma_pb.CollectionItem.repeatedFields_, null);
};
goog.inherits(proto.sygma_pb.CollectionItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.sygma_pb.CollectionItem.displayName = 'proto.sygma_pb.CollectionItem';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sygma_pb.CollectionItem.repeatedFields_ = [9,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sygma_pb.CollectionItem.prototype.toObject = function(opt_includeInstance) {
  return proto.sygma_pb.CollectionItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sygma_pb.CollectionItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.CollectionItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    selectedby: (f = msg.getSelectedby()) && connections_pb.User.toObject(includeInstance, f),
    uplaodedat: (f = msg.getUplaodedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    id: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    albumid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    albumtitle: jspb.Message.getFieldWithDefault(msg, 8, ""),
    authorList: jspb.Message.toObjectList(msg.getAuthorList(),
    types_pb.Artist.toObject, includeInstance),
    label: (f = msg.getLabel()) && types_pb.Label.toObject(includeInstance, f),
    publisheddate: (f = msg.getPublisheddate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    artworkurl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    sourcetype: jspb.Message.getFieldWithDefault(msg, 13, 0),
    sourceurl: jspb.Message.getFieldWithDefault(msg, 14, ""),
    score: jspb.Message.getFieldWithDefault(msg, 15, 0),
    tagsList: jspb.Message.getRepeatedField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sygma_pb.CollectionItem}
 */
proto.sygma_pb.CollectionItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sygma_pb.CollectionItem;
  return proto.sygma_pb.CollectionItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sygma_pb.CollectionItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sygma_pb.CollectionItem}
 */
proto.sygma_pb.CollectionItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new connections_pb.User;
      reader.readMessage(value,connections_pb.User.deserializeBinaryFromReader);
      msg.setSelectedby(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUplaodedat(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbumid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbumtitle(value);
      break;
    case 9:
      var value = new types_pb.Artist;
      reader.readMessage(value,types_pb.Artist.deserializeBinaryFromReader);
      msg.addAuthor(value);
      break;
    case 10:
      var value = new types_pb.Label;
      reader.readMessage(value,types_pb.Label.deserializeBinaryFromReader);
      msg.setLabel(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPublisheddate(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtworkurl(value);
      break;
    case 13:
      var value = /** @type {!proto.sygma_pb.SourceType} */ (reader.readEnum());
      msg.setSourcetype(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceurl(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sygma_pb.CollectionItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sygma_pb.CollectionItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sygma_pb.CollectionItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sygma_pb.CollectionItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelectedby();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      connections_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getUplaodedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAlbumid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAlbumtitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAuthorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      types_pb.Artist.serializeBinaryToWriter
    );
  }
  f = message.getLabel();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      types_pb.Label.serializeBinaryToWriter
    );
  }
  f = message.getPublisheddate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getArtworkurl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSourcetype();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getSourceurl();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
};


/**
 * optional User selectedBy = 1;
 * @return {?proto.sygma_pb.User}
 */
proto.sygma_pb.CollectionItem.prototype.getSelectedby = function() {
  return /** @type{?proto.sygma_pb.User} */ (
    jspb.Message.getWrapperField(this, connections_pb.User, 1));
};


/** @param {?proto.sygma_pb.User|undefined} value */
proto.sygma_pb.CollectionItem.prototype.setSelectedby = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.sygma_pb.CollectionItem.prototype.clearSelectedby = function() {
  this.setSelectedby(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.CollectionItem.prototype.hasSelectedby = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp uplaodedAt = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sygma_pb.CollectionItem.prototype.getUplaodedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sygma_pb.CollectionItem.prototype.setUplaodedat = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.sygma_pb.CollectionItem.prototype.clearUplaodedat = function() {
  this.setUplaodedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.CollectionItem.prototype.hasUplaodedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sygma_pb.CollectionItem.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sygma_pb.CollectionItem.prototype.setUpdatedat = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.sygma_pb.CollectionItem.prototype.clearUpdatedat = function() {
  this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.CollectionItem.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.sygma_pb.CollectionItem.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionItem.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string id = 5;
 * @return {string}
 */
proto.sygma_pb.CollectionItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionItem.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.sygma_pb.CollectionItem.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionItem.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string albumID = 7;
 * @return {string}
 */
proto.sygma_pb.CollectionItem.prototype.getAlbumid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionItem.prototype.setAlbumid = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string albumTitle = 8;
 * @return {string}
 */
proto.sygma_pb.CollectionItem.prototype.getAlbumtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionItem.prototype.setAlbumtitle = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated Artist author = 9;
 * @return {!Array.<!proto.sygma_pb.Artist>}
 */
proto.sygma_pb.CollectionItem.prototype.getAuthorList = function() {
  return /** @type{!Array.<!proto.sygma_pb.Artist>} */ (
    jspb.Message.getRepeatedWrapperField(this, types_pb.Artist, 9));
};


/** @param {!Array.<!proto.sygma_pb.Artist>} value */
proto.sygma_pb.CollectionItem.prototype.setAuthorList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.sygma_pb.Artist=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sygma_pb.Artist}
 */
proto.sygma_pb.CollectionItem.prototype.addAuthor = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.sygma_pb.Artist, opt_index);
};


proto.sygma_pb.CollectionItem.prototype.clearAuthorList = function() {
  this.setAuthorList([]);
};


/**
 * optional Label label = 10;
 * @return {?proto.sygma_pb.Label}
 */
proto.sygma_pb.CollectionItem.prototype.getLabel = function() {
  return /** @type{?proto.sygma_pb.Label} */ (
    jspb.Message.getWrapperField(this, types_pb.Label, 10));
};


/** @param {?proto.sygma_pb.Label|undefined} value */
proto.sygma_pb.CollectionItem.prototype.setLabel = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.sygma_pb.CollectionItem.prototype.clearLabel = function() {
  this.setLabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.CollectionItem.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp publishedDate = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sygma_pb.CollectionItem.prototype.getPublisheddate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.sygma_pb.CollectionItem.prototype.setPublisheddate = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.sygma_pb.CollectionItem.prototype.clearPublisheddate = function() {
  this.setPublisheddate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.sygma_pb.CollectionItem.prototype.hasPublisheddate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string artworkURL = 12;
 * @return {string}
 */
proto.sygma_pb.CollectionItem.prototype.getArtworkurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionItem.prototype.setArtworkurl = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional SourceType sourceType = 13;
 * @return {!proto.sygma_pb.SourceType}
 */
proto.sygma_pb.CollectionItem.prototype.getSourcetype = function() {
  return /** @type {!proto.sygma_pb.SourceType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {!proto.sygma_pb.SourceType} value */
proto.sygma_pb.CollectionItem.prototype.setSourcetype = function(value) {
  jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional string sourceURL = 14;
 * @return {string}
 */
proto.sygma_pb.CollectionItem.prototype.getSourceurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.sygma_pb.CollectionItem.prototype.setSourceurl = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int32 score = 15;
 * @return {number}
 */
proto.sygma_pb.CollectionItem.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.sygma_pb.CollectionItem.prototype.setScore = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * repeated string tags = 16;
 * @return {!Array.<string>}
 */
proto.sygma_pb.CollectionItem.prototype.getTagsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/** @param {!Array.<string>} value */
proto.sygma_pb.CollectionItem.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.sygma_pb.CollectionItem.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


proto.sygma_pb.CollectionItem.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


goog.object.extend(exports, proto.sygma_pb);
